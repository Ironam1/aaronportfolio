{"version":3,"sources":["pages/HomePage/index.js","pages/AboutPage/index.js","components/AppCard/index.js","pages/PortfolioPage/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","className","href","rel","target","AboutPage","AppCard","title","src","image","alt","description","git","deploy","PortfolioPage","apps","map","id","key","Footer","Component","App","state","this","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mkDA+CeA,EA1CE,SAAAC,GACf,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SACb,+CAGF,yBAAKA,UAAU,UACb,sDACA,oDAGF,yBAAKA,UAAU,SACb,uBACEC,KAAK,8CACLC,IAAI,oBACJC,OAAO,SAEP,kBAAC,IAAD,OAEF,uBACEF,KAAK,gFACLC,IAAI,oBACJC,OAAO,SAEP,kBAAC,IAAD,OAEF,uBACEF,KAAK,6BACLC,IAAI,oBACJC,OAAO,SAEP,kBAAC,IAAD,OAEF,uBAAGF,KAAK,oCAAoCE,OAAO,SACjD,kBAAC,IAAD,U,eCOKC,EA9BG,SAAAL,GAChB,OACE,yBAAKC,UAAU,QACb,+RAMA,yPAMA,gLAMA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,MADF,IACkB,kBAAC,IAAD,MADlB,IAC6B,kBAAC,IAAD,MAD7B,IAC4C,kBAAC,IAAD,MAD5C,IACsD,kBAAC,IAAD,MAAa,IACjE,kBAAC,IAAD,MAFF,IAEc,kBAAC,IAAD,MAFd,IAE+B,kBAAC,IAAD,MAF/B,IAE6C,kBAAC,IAAD,MAF7C,IAEyD,kBAAC,IAAD,MAAa,IACpE,kBAAC,IAAD,MAHF,IAGY,kBAAC,IAAD,S,YCdHK,MAtBf,SAAiBN,GACf,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,SAASD,EAAMO,OAC/B,yBAAKC,IAAKR,EAAMS,MAAOC,IAAI,cAAcT,UAAU,UACnD,uBAAGA,UAAU,eAAeD,EAAMW,aAClC,yBAAKV,UAAU,YACb,uBAAGC,KAAMF,EAAMY,IAAKR,OAAO,SACxB,IACD,kBAAC,IAAD,OAEF,uBAAGF,KAAMF,EAAMa,OAAQT,OAAO,SAC3B,IACD,kBAAC,IAAD,WCWGU,EA1BO,SAAAd,GACpB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,mBACb,0CAEF,yBAAKA,UAAU,YACb,2EAEF,yBAAKA,UAAU,aACZD,EAAMe,KAAKC,KAAI,SAAAD,GAAI,OAClB,kBAAC,EAAD,CACEE,GAAIF,EAAKE,GACTC,IAAKH,EAAKE,GACVV,MAAOQ,EAAKR,MACZE,MAAOM,EAAKN,MACZG,IAAKG,EAAKH,IACVC,OAAQE,EAAKF,OACbF,YAAaI,EAAKJ,oB,gBCLfQ,E,iLAXX,OACE,yBAAKlB,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,OAFJ,sB,GAHemB,aCsBNC,E,2MAhBbC,MAAQ,CACNP,Q,wEAIA,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAA,KAAMQ,KAAKD,MAAMP,OACjB,kBAAC,EAAD,W,GAZUS,IAAMJ,WCGJK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f2e31750.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { FaLinkedinIn, FaGithubAlt } from \"react-icons/fa\";\nimport { GoFile, GoMail } from \"react-icons/go\";\n\nconst HomePage = props => {\n  return (\n    <div className=\"home\">\n      <div className=\"intro\">\n        <h1>Aaron MacInnis</h1>\n      </div>\n\n      <div className=\"titles\">\n        <h3> Full Stack Developer </h3>\n        <h3>Javascript Engineer</h3>\n      </div>\n\n      <div className=\"links\">\n        <a\n          href=\"https://www.linkedin.com/in/aaron-macinnis/\"\n          rel=\"noopener noreffer\"\n          target=\"blank\"\n        >\n          <FaLinkedinIn />\n        </a>\n        <a\n          href=\"https://drive.google.com/open?id=1Q6zUhLGFYt88FJ2qyKz5U1MYjbuiOOZ1wF6l-urUF_w\"\n          rel=\"noopener noreffer\"\n          target=\"blank\"\n        >\n          <GoFile />\n        </a>\n        <a\n          href=\"https://github.com/Ironam1\"\n          rel=\"noopener noreffer\"\n          target=\"blank\"\n        >\n          <FaGithubAlt />\n        </a>\n        <a href=\"mailto:https://Ironam1@icloud.com\" target=\"blank\">\n          <GoMail />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./style.css\";\nimport {\n  DiBootstrap,\n  DiCss3,\n  DiFirebase,\n  DiGit,\n  DiHeroku,\n  DiHtml5,\n  DiJavascript,\n  DiMongodb,\n  DiMysql,\n  DiNodejs,\n  DiNpm,\n  DiReact\n} from \"react-icons/di\";\n\nconst AboutPage = props => {\n  return (\n    <div className=\"info\">\n      <p>\n        Hello, welcome to my portfolio. I am a full stack developer and\n        javascript engineer with an interest in back end technologies. I graduated from the UPenn/Trilogy Bootcamp, an\n        immersive 24 week program. I enjoy challenges and am an excellent\n        problem solver. \n      </p>\n      <p>\n        An extensive career in the hospitality industry provides me with a\n        diverse and unique skill set. Communication, dedication, consistency and time\n        management are just a few. I am a valuable asset in any work\n        environment.\n      </p>\n      <p>\n        I am looking to strengthen my current skills and develop new\n        proficiencies as a member of a team that promotes growth and provides\n        opportunities.\n      </p>\n\n      <div className=\"technologies\">\n        <DiBootstrap /> <DiCss3 /> <DiFirebase /> <DiGit /> <DiHeroku />{\" \"}\n        <DiHtml5 /> <DiJavascript /> <DiMongodb /> <DiMysql /> <DiNodejs />{\" \"}\n        <DiNpm /> <DiReact />\n      </div>\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport \"./style.css\";\nimport { GoOctoface } from \"react-icons/go\";\nimport { FaLink } from \"react-icons/fa\";\n\nfunction AppCard(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"card\">\n        <span className=\"title\">{props.title}</span>\n        <img src={props.image} alt=\"screen shot\" className=\"image\"></img>\n        <p className=\"description\">{props.description}</p>\n        <div className=\"app-link\">\n          <a href={props.git} target=\"blank\">\n            {\" \"}\n            <GoOctoface />\n          </a>\n          <a href={props.deploy} target=\"blank\">\n            {\" \"}\n            <FaLink />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AppCard;\n","import React from \"react\";\nimport \"./style.css\";\nimport AppCard from \"../../components/AppCard\";\n\nconst PortfolioPage = props => {\n  return (\n    <div className=\"portfolio\">\n      <div className=\"portfolio-title\">\n        <h2>Portfolio</h2>\n      </div>\n      <div className=\"headline\">\n        <p>Here are a few of my favorite applications!</p>\n      </div>\n      <div className=\"app-cards\">\n        {props.apps.map(apps => (\n          <AppCard\n            id={apps.id}\n            key={apps.id}\n            title={apps.title}\n            image={apps.image}\n            git={apps.git}\n            deploy={apps.deploy}\n            description={apps.description}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioPage;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { AiOutlineCopyright } from \"react-icons/ai\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"copy\">\n          <AiOutlineCopyright /> \n        </div>\n        Aaron MacInnis\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport apps from \"./apps.json\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\n// import ContactPage from \"./pages/ContactPage\";\nimport PortfolioPage from \"./pages/PortfolioPage\";\nimport Footer from \"./components/Footer\";\n\nclass App extends React.Component {\n  state = {\n    apps\n  };\n\n  render() {\n    return (\n      <div>\n        <HomePage />\n        <AboutPage />\n        <PortfolioPage\n        apps={this.state.apps} />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}